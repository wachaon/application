{
  "{B887E214-D794-4474-A5B0-2C85D5A73C70}": {
    "source": "{\n  \"name\": \"application\",\n  \"version\": \"0.0.2\",\n  \"description\": \"Automatic operation of Windows\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"bundle\": \"wes bundle ./wes_modules/clipboard/src/clipboard.cs ./wes_modules/window/src/window.cs ./wes_modules/keyboard/src/keyboard.cs ./wes_modules/mouse/src/mouse.cs \"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/wachaon/application.git\"\n  },\n  \"keywords\": [\n    \"window\",\n    \"mouse\",\n    \"keyboard\"\n  ],\n  \"author\": \"wachaon\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/wachaon/application/issues\"\n  },\n  \"homepage\": \"https://github.com/wachaon/application#readme\",\n  \"wes\": {\n    \"dependencies\": {\n      \"keyboard\": \"0.0.6\",\n      \"mouse\": \"0.0.6\",\n      \"window\": \"0.0.5\",\n      \"clipboard\": \"0.0.1\",\n      \"csharpscript\": \"0.0.4\"\n    }\n  }\n}",
    "mapping": {},
    "path": "{application}/package.json"
  },
  "{8AFB20C0-B9B8-4C40-96CC-30DAC6CB3A27}": {
    "source": "\r\nconst { resolve } = require('pathname')\r\nconst { existsFileSync } = require('filesystem')\r\nconst { compile } = require('csharpscript')\r\nconst {\r\n    setData,\r\n    getData\r\n} = require('clipboard')\r\nconst {\r\n    move,\r\n    get,\r\n    hwnd,\r\n    windowLeft,\r\n    windowTop,\r\n    windowWidth,\r\n    windowHeight,\r\n    max,\r\n    min,\r\n    normal,\r\n    activateTitle,\r\n    activateHandle\r\n} = require('window')\r\nconst {\r\n    pos,\r\n    click,\r\n    leftDown,\r\n    leftUp,\r\n    rightClick,\r\n    rightDown,\r\n    rightUp,\r\n    scroll\r\n} = require('mouse')\r\nconst {\r\n    send,\r\n    press,\r\n    release,\r\n    VK_LBUTTON, // left mouse button\r\n    VK_RBUTTON, // right mouse button\r\n    VK_CANCEL, // Ctrl+Break processing\r\n    VK_MBUTTON, // Middle button on 3-button mouse\r\n    VK_XBUTTON1, // mouse X1 button\r\n    VK_XBUTTON2, // mouse X2 button\r\n    VK_BACK, // Backspace key\r\n    VK_TAB, // Tab key\r\n    VK_CLEAR, // clear key\r\n    VK_RETURN, // Enter key\r\n    VK_SHIFT, // shift key\r\n    VK_CONTROL, // Ctrl key\r\n    VK_MENU, // Alt key\r\n    VK_PAUSE, // Pause key\r\n    VK_CAPITAL, // Caps Lock key\r\n    VK_KANA, // IME kana mode\r\n    VK_HANGEUL, // IME Hanguel mode (maintained for compatibility; use VK_HANGUL)\r\n    VK_HANGUL, // IME hangul mode\r\n    VK_JUNJA, // IME Junja mode\r\n    VK_FINAL, // IME final mode\r\n    VK_HANJA, // IME Hanja mode\r\n    VK_KANJI, // IME kanji mode\r\n    VK_ESCAPE, // Esc key\r\n    VK_CONVERT, // IME conversion\r\n    VK_NONCONVERT, // No IME conversion\r\n    VK_ACCEPT, // IME accept\r\n    VK_MODECHANGE, // IME mode change request\r\n    VK_SPACE, // space key\r\n    VK_PRIOR, // Page Up key\r\n    VK_NEXT, // Page Down key\r\n    VK_END, // End key\r\n    VK_HOME, // home key\r\n    VK_LEFT, // cursor key left\r\n    VK_UP, // cursor key up\r\n    VK_RIGHT, // cursor key right\r\n    VK_DOWN, // cursor key down\r\n    VK_SELECT, // Select key\r\n    VK_PRINT, // Print key\r\n    VK_EXECUTE, // Execute key\r\n    VK_SNAPSHOT, // Print Screen key\r\n    VK_INSERT, // Insert key\r\n    VK_DELETE, // Delete key\r\n    VK_HELP, // Help key\r\n    VK_0, // 0 key\r\n    VK_1, // 1 key\r\n    VK_2, // 2 keys\r\n    VK_3, // 3 key\r\n    VK_4, // 4 key\r\n    VK_5, // 5 key\r\n    VK_6, // 6 key\r\n    VK_7, // 7 key\r\n    VK_8, // 8 key\r\n    VK_9, // 9 key\r\n    VK_A, // A key\r\n    VK_B, // B key\r\n    VK_C, // C key\r\n    VK_D, // D key\r\n    VK_E, // E key\r\n    VK_F, // F key\r\n    VK_G, // G key\r\n    VK_H, // H key\r\n    VK_I, // I key\r\n    VK_J, // J key\r\n    VK_K, // K key\r\n    VK_L, // L key\r\n    VK_M, // M key\r\n    VK_N, // N key\r\n    VK_O, // O key\r\n    VK_P, // P key\r\n    VK_Q, // Q key\r\n    VK_R, // R key\r\n    VK_S, // S key\r\n    VK_T, // T key\r\n    VK_U, // U key\r\n    VK_V, // V key\r\n    VK_W, // W key\r\n    VK_X, // X key\r\n    VK_Y, // Y key\r\n    VK_Z, // Z key\r\n    VK_LWIN, // Left Windows key\r\n    VK_RWIN, // Right Windows key\r\n    VK_APPS, // application key\r\n    VK_SLEEP, // sleep key\r\n    VK_NUMPAD0, // numeric keypad 0\r\n    VK_NUMPAD1, // numeric keypad 1\r\n    VK_NUMPAD2, // numeric keypad 2\r\n    VK_NUMPAD3, // numeric keypad 3\r\n    VK_NUMPAD4, // numeric keypad 4\r\n    VK_NUMPAD5, // numeric keypad 5\r\n    VK_NUMPAD6, // numeric keypad 6\r\n    VK_NUMPAD7, // numeric keypad 7\r\n    VK_NUMPAD8, // numeric keypad 8\r\n    VK_NUMPAD9, // numeric keypad 9\r\n    VK_MULTIPLY, // * key\r\n    VK_ADD, // + key\r\n    VK_SEPARATOR, // Separator key\r\n    VK_SUBTRACT, // -key\r\n    VK_DECIMAL, // . key\r\n    VK_DIVIDE, // / key\r\n    VK_F1, // F1 key\r\n    VK_F2, // F2 key\r\n    VK_F3, // F3 key\r\n    VK_F4, // F4 key\r\n    VK_F5, // F5 key\r\n    VK_F6, // F6 key\r\n    VK_F7, // F7 key\r\n    VK_F8, // F8 key\r\n    VK_F9, // F9 key\r\n    VK_F10, // F10 key\r\n    VK_F11, // F11 key\r\n    VK_F12, // F12 key\r\n    VK_F13, // F13 key\r\n    VK_F14, // F14 key\r\n    VK_F15, // F15 key\r\n    VK_F16, // F16 key\r\n    VK_F17, // F17 key\r\n    VK_F18, // F18 key\r\n    VK_F19, // F19 key\r\n    VK_F20, // F20 key\r\n    VK_F21, // F21 key\r\n    VK_F22, // F22 key\r\n    VK_F23, // F23 key\r\n    VK_F24, // F24 key\r\n    VK_NUMLOCK, // NumLock key\r\n    VK_SCROLL, // ScrollLock key\r\n    VK_LSHIFT, // left shift key\r\n    VK_RSHIFT, // right shift key\r\n    VK_LCONTROL, // Left Ctrl key\r\n    VK_RCONTROL, // Right Ctrl key\r\n    VK_LMENU, // Left Alt key\r\n    VK_RMENU, // Right Alt key\r\n    VK_BROWSER_BACK, // browser back key\r\n    VK_BROWSER_FORWARD, // browser forward key\r\n    VK_BROWSER_REFRESH, // browser refresh key\r\n    VK_BROWSER_STOP, // browser stop key\r\n    VK_BROWSER_SEARCH, // browser search key\r\n    VK_BROWSER_FAVORITES, // browser favorite keys\r\n    VK_BROWSER_HOME, // Browser Home key\r\n    VK_VOLUME_MUTE, // volume mute key\r\n    VK_VOLUME_DOWN, // volume down key\r\n    VK_VOLUME_UP, // volume up key\r\n    VK_MEDIA_NEXT_TRACK, // media next track key\r\n    VK_MEDIA_PREV_TRACK, // media pre-track key\r\n    VK_MEDIA_STOP, // media stop key\r\n    VK_MEDIA_PLAY_PAUSE, // media play/pause key\r\n    VK_LAUNCH_MAIL, // Mail launch key\r\n    VK_LAUNCH_MEDIA_SELECT, // media selection key\r\n    VK_LAUNCH_APP1, // launch key 1\r\n    VK_LAUNCH_APP2, // launch key 2\r\n    VK_ICO_HELP, // ?\r\n    VK_ICO_00, // ?\r\n    VK_PROCESSKEY, // IME PROCESS key\r\n    VK_ICO_CLEAR, // ?\r\n    VK_PACKET, // See MSDN for details\r\n    VK_OEM_RESET, // OEM defined key\r\n    VK_OEM_JUMP, // OEM defined key\r\n    VK_OEM_PA1, // OEM defined key\r\n    VK_OEM_PA2, // OEM defined key\r\n    VK_OEM_PA3, // OEM defined key\r\n    VK_OEM_WSCTRL, // OEM defined key\r\n    VK_OEM_CUSEL, // OEM defined key\r\n    VK_OEM_ATTN, // OEM defined key\r\n    VK_OEM_FINISH, // OEM defined key\r\n    VK_OEM_COPY, // OEM defined key\r\n    VK_OEM_AUTO, // OEM defined key\r\n    VK_OEM_ENLW, // OEM defined key\r\n    VK_OEM_BACKTAB, // OEM defined key\r\n    VK_ATTN, // Attn key\r\n    VK_CRSEL, // CrSel key\r\n    VK_EXSEL, // Exsel key\r\n    VK_EREOF, // Erase EOF key\r\n    VK_PLAY, // Play key\r\n    VK_ZOOM, // Zoom key\r\n    VK_NONAME, // Reserved\r\n    VK_PA1, // PA1 key\r\n    VK_OEM_CLEAR // clear key\r\n} = require('keyboard')\r\n\r\nconst clipboard = [resolve(__dirname, 'wes_modules/clipboard/clipboard.exe'), resolve(__dirname, 'wes_modules/clipboard/src/clipboard.cs')]\r\nconst window = [resolve(__dirname, 'wes_modules/window/window.exe'), resolve(__dirname, 'wes_modules/window/src/window.cs')]\r\nconst mouse = [resolve(__dirname, 'wes_modules/mouse/mouse.exe'), resolve(__dirname, 'wes_modules/mouse/src/mouse.cs')]\r\nconst keyboard = [resolve(__dirname, 'wes_modules/keyboard/keyboard.exe'), resolve(__dirname, 'wes_modules/keyboard/src/keyboard.cs')]\r\n\r\nconst application = [clipboard, window, mouse, keyboard]\r\napplication.forEach(app => {\r\n    if (!existsFileSync(app[0])) compile(app[1], { out: app[0] })\r\n})\r\n\r\nmodule.exports = {\r\n    \"setData\": function application_setData(text = '', time = 0) {\r\n        setData(text)\r\n        WScript.Sleep(time)\r\n    },\r\n    \"getData\": function application_getData(time = 0) {\r\n        const res = getData()\r\n        WScript.Sleep(time)\r\n        return res\r\n    },\r\n    \"move\": function application_move(position, time = 0) {\r\n        const { left, top, width, height } = position\r\n        move(left, top, width, height)\r\n        WScript.Sleep(time)\r\n    },\r\n    \"get\": function application_get(time = 0) {\r\n        const exp = /(\\d+)/\r\n        const res = {\r\n            hwnd: parseInt(hwnd(), 10),\r\n            left: parseInt(windowLeft().match(exp)[1], 10),\r\n            top: parseInt(windowTop().match(exp)[1], 10),\r\n            width: parseInt(windowWidth().match(exp)[1], 10),\r\n            height: parseInt(windowHeight().match(exp)[1], 10)\r\n        }\r\n        WScript.Sleep(time)\r\n        return res\r\n    },\r\n    \"hwnd\": function application_hwnd(time = 0) {\r\n        const res = hwnd()\r\n        WScript.Sleep(time)\r\n        return res\r\n    },\r\n    \"windowLeft\": function application_windowLeft(time = 0) {\r\n        const res = windowLeft()\r\n        WScript.Sleep(time)\r\n        return res\r\n    },\r\n    \"windowTop\": function application_windowTop(time = 0) {\r\n        const res = windowTop()\r\n        WScript.Sleep(time)\r\n        return res\r\n    },\r\n    \"windowWidth\": function application_windowWidth(time = 0) {\r\n        const res = windowWidth()\r\n        WScript.Sleep(time)\r\n        return res\r\n    },\r\n    \"windowHeight\": function application_windowHeight(time = 0) {\r\n        const res = windowHeight()\r\n        WScript.Sleep(time)\r\n        return res\r\n    },\r\n    \"max\": function application_max(time = 0) {\r\n        max()\r\n        WScript.Sleep(time)\r\n    },\r\n    \"min\": function application_min(time = 0) {\r\n        min()\r\n        WScript.Sleep(time)\r\n    },\r\n    \"normal\": function application_normal(time = 0) {\r\n        normal()\r\n        WScript.Sleep(time)\r\n    },\r\n    \"activateTitle\": function application_activateTitle(title, time = 0) {\r\n        activateTitle(title)\r\n        WScript.Sleep(time)\r\n    },\r\n    \"activateHandle\": function application_activateHandle(hWnd, time = 0) {\r\n        activateHandle(hWnd)\r\n        WScript.Sleep(time)\r\n    },\r\n    \"pos\": function application_pos(position, time = 0) {\r\n        const { x, y } = position\r\n        pos(x, y)\r\n        WScript.Sleep(time)\r\n    },\r\n    \"click\": function application_click(time = 0) {\r\n        click()\r\n        WScript.Sleep(time)\r\n    },\r\n    \"leftDown\": function application_leftDown(time = 0) {\r\n        leftDown()\r\n        WScript.Sleep(time)\r\n    },\r\n    \"leftUp\": function application_leftUp(time = 0) {\r\n        leftUp()\r\n        WScript.Sleep(time)\r\n    },\r\n    \"rightClick\": function application_rightClick(time = 0) {\r\n        rightClick()\r\n        WScript.Sleep(time)\r\n    },\r\n    \"rightDown\": function application_rightDown(time = 0) {\r\n        rightDown()\r\n        WScript.Sleep(time)\r\n    },\r\n    \"rightUp\": function application_rightUp(time = 0) {\r\n        rightUp()\r\n        WScript.Sleep(time)\r\n    },\r\n    \"scroll\": function application_scroll(movement = 0, time = 0) {\r\n        scroll(movement)\r\n        WScript.Sleep(time)\r\n    },\r\n    \"send\": function application_send(keyCode, time = 0) {\r\n        send(keyCode)\r\n        WScript.Sleep(time)\r\n    },\r\n    \"press\": function application_press(keyCode, time = 0) {\r\n        press(keyCode)\r\n        WScript.Sleep(time)\r\n    },\r\n    \"release\": function application_release(keyCode, time = 0) {\r\n        release(keyCode)\r\n        WScript.Sleep(time)\r\n    },\r\n    VK_LBUTTON, // left mouse button\r\n    VK_RBUTTON, // right mouse button\r\n    VK_CANCEL, // Ctrl+Break processing\r\n    VK_MBUTTON, // Middle button on 3-button mouse\r\n    VK_XBUTTON1, // mouse X1 button\r\n    VK_XBUTTON2, // mouse X2 button\r\n    VK_BACK, // Backspace key\r\n    VK_TAB, // Tab key\r\n    VK_CLEAR, // clear key\r\n    VK_RETURN, // Enter key\r\n    VK_SHIFT, // shift key\r\n    VK_CONTROL, // Ctrl key\r\n    VK_MENU, // Alt key\r\n    VK_PAUSE, // Pause key\r\n    VK_CAPITAL, // Caps Lock key\r\n    VK_KANA, // IME kana mode\r\n    VK_HANGEUL, // IME Hanguel mode (maintained for compatibility; use VK_HANGUL)\r\n    VK_HANGUL, // IME hangul mode\r\n    VK_JUNJA, // IME Junja mode\r\n    VK_FINAL, // IME final mode\r\n    VK_HANJA, // IME Hanja mode\r\n    VK_KANJI, // IME kanji mode\r\n    VK_ESCAPE, // Esc key\r\n    VK_CONVERT, // IME conversion\r\n    VK_NONCONVERT, // No IME conversion\r\n    VK_ACCEPT, // IME accept\r\n    VK_MODECHANGE, // IME mode change request\r\n    VK_SPACE, // space key\r\n    VK_PRIOR, // Page Up key\r\n    VK_NEXT, // Page Down key\r\n    VK_END, // End key\r\n    VK_HOME, // home key\r\n    VK_LEFT, // cursor key left\r\n    VK_UP, // cursor key up\r\n    VK_RIGHT, // cursor key right\r\n    VK_DOWN, // cursor key down\r\n    VK_SELECT, // Select key\r\n    VK_PRINT, // Print key\r\n    VK_EXECUTE, // Execute key\r\n    VK_SNAPSHOT, // Print Screen key\r\n    VK_INSERT, // Insert key\r\n    VK_DELETE, // Delete key\r\n    VK_HELP, // Help key\r\n    VK_0, // 0 key\r\n    VK_1, // 1 key\r\n    VK_2, // 2 keys\r\n    VK_3, // 3 key\r\n    VK_4, // 4 key\r\n    VK_5, // 5 key\r\n    VK_6, // 6 key\r\n    VK_7, // 7 key\r\n    VK_8, // 8 key\r\n    VK_9, // 9 key\r\n    VK_A, // A key\r\n    VK_B, // B key\r\n    VK_C, // C key\r\n    VK_D, // D key\r\n    VK_E, // E key\r\n    VK_F, // F key\r\n    VK_G, // G key\r\n    VK_H, // H key\r\n    VK_I, // I key\r\n    VK_J, // J key\r\n    VK_K, // K key\r\n    VK_L, // L key\r\n    VK_M, // M key\r\n    VK_N, // N key\r\n    VK_O, // O key\r\n    VK_P, // P key\r\n    VK_Q, // Q key\r\n    VK_R, // R key\r\n    VK_S, // S key\r\n    VK_T, // T key\r\n    VK_U, // U key\r\n    VK_V, // V key\r\n    VK_W, // W key\r\n    VK_X, // X key\r\n    VK_Y, // Y key\r\n    VK_Z, // Z key\r\n    VK_LWIN, // Left Windows key\r\n    VK_RWIN, // Right Windows key\r\n    VK_APPS, // application key\r\n    VK_SLEEP, // sleep key\r\n    VK_NUMPAD0, // numeric keypad 0\r\n    VK_NUMPAD1, // numeric keypad 1\r\n    VK_NUMPAD2, // numeric keypad 2\r\n    VK_NUMPAD3, // numeric keypad 3\r\n    VK_NUMPAD4, // numeric keypad 4\r\n    VK_NUMPAD5, // numeric keypad 5\r\n    VK_NUMPAD6, // numeric keypad 6\r\n    VK_NUMPAD7, // numeric keypad 7\r\n    VK_NUMPAD8, // numeric keypad 8\r\n    VK_NUMPAD9, // numeric keypad 9\r\n    VK_MULTIPLY, // * key\r\n    VK_ADD, // + key\r\n    VK_SEPARATOR, // Separator key\r\n    VK_SUBTRACT, // -key\r\n    VK_DECIMAL, // . key\r\n    VK_DIVIDE, // / key\r\n    VK_F1, // F1 key\r\n    VK_F2, // F2 key\r\n    VK_F3, // F3 key\r\n    VK_F4, // F4 key\r\n    VK_F5, // F5 key\r\n    VK_F6, // F6 key\r\n    VK_F7, // F7 key\r\n    VK_F8, // F8 key\r\n    VK_F9, // F9 key\r\n    VK_F10, // F10 key\r\n    VK_F11, // F11 key\r\n    VK_F12, // F12 key\r\n    VK_F13, // F13 key\r\n    VK_F14, // F14 key\r\n    VK_F15, // F15 key\r\n    VK_F16, // F16 key\r\n    VK_F17, // F17 key\r\n    VK_F18, // F18 key\r\n    VK_F19, // F19 key\r\n    VK_F20, // F20 key\r\n    VK_F21, // F21 key\r\n    VK_F22, // F22 key\r\n    VK_F23, // F23 key\r\n    VK_F24, // F24 key\r\n    VK_NUMLOCK, // NumLock key\r\n    VK_SCROLL, // ScrollLock key\r\n    VK_LSHIFT, // left shift key\r\n    VK_RSHIFT, // right shift key\r\n    VK_LCONTROL, // Left Ctrl key\r\n    VK_RCONTROL, // Right Ctrl key\r\n    VK_LMENU, // Left Alt key\r\n    VK_RMENU, // Right Alt key\r\n    VK_BROWSER_BACK, // browser back key\r\n    VK_BROWSER_FORWARD, // browser forward key\r\n    VK_BROWSER_REFRESH, // browser refresh key\r\n    VK_BROWSER_STOP, // browser stop key\r\n    VK_BROWSER_SEARCH, // browser search key\r\n    VK_BROWSER_FAVORITES, // browser favorite keys\r\n    VK_BROWSER_HOME, // Browser Home key\r\n    VK_VOLUME_MUTE, // volume mute key\r\n    VK_VOLUME_DOWN, // volume down key\r\n    VK_VOLUME_UP, // volume up key\r\n    VK_MEDIA_NEXT_TRACK, // media next track key\r\n    VK_MEDIA_PREV_TRACK, // media pre-track key\r\n    VK_MEDIA_STOP, // media stop key\r\n    VK_MEDIA_PLAY_PAUSE, // media play/pause key\r\n    VK_LAUNCH_MAIL, // Mail launch key\r\n    VK_LAUNCH_MEDIA_SELECT, // media selection key\r\n    VK_LAUNCH_APP1, // launch key 1\r\n    VK_LAUNCH_APP2, // launch key 2\r\n    VK_ICO_HELP, // ?\r\n    VK_ICO_00, // ?\r\n    VK_PROCESSKEY, // IME PROCESS key\r\n    VK_ICO_CLEAR, // ?\r\n    VK_PACKET, // See MSDN for details\r\n    VK_OEM_RESET, // OEM defined key\r\n    VK_OEM_JUMP, // OEM defined key\r\n    VK_OEM_PA1, // OEM defined key\r\n    VK_OEM_PA2, // OEM defined key\r\n    VK_OEM_PA3, // OEM defined key\r\n    VK_OEM_WSCTRL, // OEM defined key\r\n    VK_OEM_CUSEL, // OEM defined key\r\n    VK_OEM_ATTN, // OEM defined key\r\n    VK_OEM_FINISH, // OEM defined key\r\n    VK_OEM_COPY, // OEM defined key\r\n    VK_OEM_AUTO, // OEM defined key\r\n    VK_OEM_ENLW, // OEM defined key\r\n    VK_OEM_BACKTAB, // OEM defined key\r\n    VK_ATTN, // Attn key\r\n    VK_CRSEL, // CrSel key\r\n    VK_EXSEL, // Exsel key\r\n    VK_EREOF, // Erase EOF key\r\n    VK_PLAY, // Play key\r\n    VK_ZOOM, // Zoom key\r\n    VK_NONAME, // Reserved\r\n    VK_PA1, // PA1 key\r\n    VK_OEM_CLEAR // clear key\r\n}\r\n",
    "mapping": {
      "csharpscript": "{00BA6670-4340-4510-A61A-94D49B4D86D9}",
      "clipboard": "{2E3033E2-9200-40F1-9CDC-DED9884EDA70}",
      "window": "{8F55B35D-AD0C-4E39-AE0F-1B3DA72F7122}",
      "mouse": "{3DD019E3-D66F-4A86-ACD7-225B115838CC}",
      "keyboard": "{F7F0009C-AF49-45FE-8D7E-1F1EC5554349}"
    },
    "path": "{application}/index.js"
  },
  "{00BA6670-4340-4510-A61A-94D49B4D86D9}": {
    "source": "const WShell = require('WScript.Shell')\r\n\r\nconst { readFileSync, writeFileSync, existsFileSync, deleteFileSync } = require('filesystem')\r\nconst { resolve, toWin32Sep, basename, extname } = require('pathname')\r\nconst { forEach, execCommand } = require('utility')\r\nconst { SPACE, LF, rLINE_SEP } = require('text')\r\nconst { isNumber } = require('typecheck')\r\nconst { unnamed } = require('argv')\r\nconst genGUID = require('genGUID')\r\nconst isCLI = require('isCLI')\r\n\r\nif (isCLI(__filename)) {\r\n    const args = unnamed.slice(1)\r\n    console.log(execCommand(`${getCompiler()} ${args.join(SPACE)}`))\r\n} else module.exports = {\r\n    execScript,\r\n    execSource,\r\n    compile,\r\n}\r\n\r\n// methods\r\nfunction execScript(input, Class, Method, ...params) {\r\n    const source = readFileSync(resolve(process.cwd(), input), 'auto')\r\n    return execSource(source, Class, Method, ...params)\r\n}\r\n\r\nfunction execSource(source, Class, Method, ...params) {\r\n    let args = \"\"\r\n    if (params.length) args = new Array(params.length).fill(\"\").map((arg, i) => `$args[${i}]`).join(', ')\r\n    const code = `\r\n$Source = @\"\r\n${source}\r\n\"@\r\nAdd-Type -Language CSharp -TypeDefinition $Source\r\n[${Class}]::${Method}(${args})\r\n`.split(rLINE_SEP).join(LF)\r\n    const temp = resolve(process.cwd(), genGUID() + '.ps1')\r\n\r\n    try {\r\n        console.weaklog(writeFileSync(temp, code, 'UTF-8'))\r\n        const command = `powershell -ExecutionPolicy Bypass -File \"${toWin32Sep(temp)}\" ${params.map(param => convert(param)).join(SPACE)}`\r\n        return execCommand(command)\r\n    } catch (e) {\r\n        throw e\r\n    } finally {\r\n        console.weaklog(deleteFileSync(temp))\r\n    }\r\n}\r\n\r\nfunction compile(input, options = {}) {\r\n    options.out = toWin32Sep(\r\n        resolve(\r\n            process.cwd(),\r\n            (\r\n                'out' in options\r\n                    ? options.out\r\n                    : basename(input, extname(input)) + \".exe\"\r\n            )\r\n        )\r\n    )\r\n    const opts = Object.assign({\r\n        target: \"exe\"\r\n    }, options)\r\n\r\n    let params = []\r\n    forEach((value, key) => {\r\n        params.push(`/${key}:${value}`)\r\n    })(opts)\r\n\r\n    const command = `${getCompiler()} ${params.join(\" \")} ${toWin32Sep(resolve(process.cwd(), input))}`\r\n    const result = execCommand(command)\r\n\r\n    if (isCLI(__filename)) console.log(result)\r\n    else return result\r\n}\r\n\r\n// util\r\nfunction getCompiler() {\r\n    return [\r\n        \"v4.0.30319\",\r\n        \"V3.5\",\r\n        \"V3.0\",\r\n        \"v2.0.50727\",\r\n        \"v1.1.4322\",\r\n        \"v1.0.3705\"\r\n    ]\r\n        .map((ver) => {\r\n            return toWin32Sep(\r\n                resolve(\r\n                    WShell.ExpandEnvironmentStrings(\"%SystemRoot%\"),\r\n                    \"Microsoft.NET/Framework\",\r\n                    ver,\r\n                    \"csc.exe\"\r\n                )\r\n            )\r\n        })\r\n        .find(exe => existsFileSync(exe))\r\n}\r\n\r\nfunction convert(item) {\r\n    if (item === true) return \"$True\"\r\n    if (item === false) return \"$False\"\r\n    if (item == null) return \"$Null\"\r\n    if (isNumber(item)) {\r\n        if (item !== item) \"[double]::NaN\"\r\n        if (item === Number.POSITIVE_INFINITY) return \"[double]::PositiveInfinity\"\r\n        if (item === Number.NEGATIVE_INFINITY) return \"[double]::NegativeInfinity\"\r\n        return item\r\n    }\r\n    return `\"${item}\"`\r\n}",
    "mapping": {},
    "path": "{application}/wes_modules/csharpscript/index.js"
  },
  "{15E219A7-8EE0-4542-9D3B-31685F5DC0F9}": {
    "source": "{\n  \"name\": \"csharpscript\",\n  \"version\": \"0.0.4\",\n  \"description\": \"csharp script\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"bundle\": \"wes bundle usage/example.cs usage/index.js\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/wachaon/csharpscript.git\"\n  },\n  \"keywords\": [\n    \"csharp\"\n  ],\n  \"author\": \"wachaon\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/wachaon/csharpscript/issues\"\n  },\n  \"homepage\": \"https://github.com/wachaon/csharpscript#readme\"\n}",
    "path": "{application}/wes_modules/csharpscript/package.json"
  },
  "{2E3033E2-9200-40F1-9CDC-DED9884EDA70}": {
    "source": "const { existsFileSync } = require('filesystem')\r\nconst { resolve } = require('pathname')\r\nconst { execCommand } = require('utility')\r\nconst argv = require('argv')\r\nconst isCLI = require('isCLI')\r\nconst { execScript, compile } = require('csharpscript')\r\n\r\n// mouse\r\nconst clipboard_cs = resolve(__dirname, 'src/clipboard.cs')\r\nconst clipboard_exe = resolve(__dirname, 'clipboard.exe')\r\nconst exists_clipboard_exe = existsFileSync(clipboard_exe)\r\nconst clipboard = 'clipboard'\r\nconst Main = 'Main'\r\n\r\nfunction setData(text = '') {\r\n    if (!exists_clipboard_exe) compile(clipboard_cs, { out: clipboard_exe })\r\n    execCommand(`${clipboard_exe} setData Text \"${text}\"`)\r\n}\r\n\r\nfunction getData() {\r\n    if (!exists_clipboard_exe) compile(clipboard_cs, { out: clipboard_exe })\r\n    return execCommand(`${clipboard_exe} getData Text\"`)\r\n}\r\n\r\nif (isCLI(__filename)) {\r\n    if (argv.get('c') || argv.get('compile') || argv.unnamed[1] === 'compile') compile(clipboard_cs, { out: clipboard_exe })\r\n} else module.exports = {\r\n    setData,\r\n    getData\r\n}",
    "mapping": {},
    "path": "{application}/wes_modules/clipboard/index.js"
  },
  "{5F834617-358F-4BC3-A84F-7A8F8278F163}": {
    "source": "{\n  \"name\": \"clipboard\",\n  \"version\": \"0.0.1\",\n  \"description\": \"clipboard\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"bundle\": \"wes bundle src/clipboard.cs usage.js\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/wachaon/clipboard.git\"\n  },\n  \"keywords\": [\n    \"clicpboard\"\n  ],\n  \"author\": \"wachaon\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/wachaon/clipboard/issues\"\n  },\n  \"homepage\": \"https://github.com/wachaon/clipboard#readme\",\n  \"wes\": {\n    \"dependencies\": {\n      \"csharpscript\": \"0.0.4\"\n    }\n  }\n}",
    "path": "{application}/wes_modules/clipboard/package.json"
  },
  "{8F55B35D-AD0C-4E39-AE0F-1B3DA72F7122}": {
    "source": "const { existsFileSync, deleteFileSync } = require('filesystem')\r\nconst { resolve } = require('pathname')\r\nconst { execCommand } = require('utility')\r\nconst argv = require('argv')\r\nconst isCLI = require('isCLI')\r\nconst { execScript, compile } = require('csharpscript')\r\n\r\n// window\r\nconst window_cs = resolve(__dirname, 'src/window.cs')\r\nconst window_exe = resolve(__dirname, 'window.exe')\r\nconst exists_window_exe = existsFileSync(window_exe)\r\nconst window = 'window'\r\nconst Main = 'Main'\r\n\r\n// window method\r\nfunction move(left = 0, top = 0, width = 100, height = 100) {\r\n    if (exists_window_exe) execCommand(`${window_exe} move ${left} ${top} ${width} ${height}`)\r\n    else execScript(window_cs, window, Main, 'move', left, top, width, height)\r\n}\r\n\r\nfunction get() {\r\n    if (exists_window_exe) return execCommand(`${window_exe} get`)\r\n    else execScript(window_cs, window, Main, 'get', 0, 0, 0, 0)\r\n}\r\n\r\nfunction hwnd() {\r\n    if (exists_window_exe) return execCommand(`${window_exe} hwnd`)\r\n    else return execScript(window_cs, window, Main, 'hwnd', 0, 0, 0, 0)\r\n}\r\n\r\nfunction windowLeft() {\r\n    if (exists_window_exe) return execCommand(`${window_exe} windowLeft`)\r\n    else return execScript(window_cs, window, Main, 'windowLeft', 0, 0, 0, 0)\r\n}\r\n\r\nfunction windowTop() {\r\n    if (exists_window_exe) return execCommand(`${window_exe} windowTop`)\r\n    else return execScript(window_cs, window, Main, 'windowTop', 0, 0, 0, 0)\r\n}\r\n\r\nfunction windowWidth() {\r\n    if (exists_window_exe) return execCommand(`${window_exe} windowWidth`)\r\n    else return execScript(window_cs, window, Main, 'windowWidth', 0, 0, 0, 0)\r\n}\r\n\r\nfunction windowHeight() {\r\n    if (exists_window_exe) return execCommand(`${window_exe} windowHeight`)\r\n    else return execScript(window_cs, window, Main, 'windowHeight', 0, 0, 0, 0)\r\n}\r\n\r\nfunction max() {\r\n    if (exists_window_exe) execCommand(`${window_exe} max`)\r\n    else execScript(window_cs, window, Main, 'max', 0, 0, 0, 0)\r\n}\r\n\r\nfunction min() {\r\n    if (exists_window_exe) execCommand(`${window_exe} min`)\r\n    else execScript(window_cs, window, Main, 'min', 0, 0, 0, 0)\r\n}\r\n\r\nfunction normal() {\r\n    if (exists_window_exe) execCommand(`${window_exe} normal`)\r\n    else execScript(window_cs, window, Main, 'normal', 0, 0, 0, 0)\r\n}\r\n\r\nfunction activateTitle(title) {\r\n    if (exists_window_exe) execCommand(`${window_exe} activateTitle \"${title}\"`)\r\n    // else ps(window_cs, ['activateTitle', title, 0, 0, 0])\r\n    else {\r\n        compile(window_cs, { out: window_exe })\r\n        execCommand(`${window_exe} activateTitle \"${title}\"`)\r\n        WScript.Sleep(1)\r\n        deleteFileSync(window_exe)\r\n    }\r\n}\r\n\r\nfunction activateHandle(hWnd) {\r\n    if (exists_window_exe) execCommand(`${window_exe} activateHandle ${hWnd}`)\r\n    else execScript(window_cs, window, Main, 'activateHandle', hWnd, 0, 0, 0)\r\n}\r\n\r\nfunction title() {\r\n    if (exists_window_exe) execCommand(`${window_exe} title`)\r\n    else execScript(window_cs, window, Main, 'title', 0, 0, 0, 0)\r\n}\r\n\r\nif (isCLI(__filename)) {\r\n    if (argv.get('c') || argv.get('compile') || argv.unnamed[1] === 'compile') compile(window_cs, { out: window_exe })\r\n} else module.exports = {\r\n    move,\r\n    get,\r\n    hwnd,\r\n    windowLeft,\r\n    windowTop,\r\n    windowWidth,\r\n    windowHeight,\r\n    max,\r\n    min,\r\n    normal,\r\n    activateTitle,\r\n    activateHandle,\r\n    title\r\n}",
    "mapping": {
      "csharpscript": "{ECB6D04F-0102-4A98-9EAC-AD7D777D347E}"
    },
    "path": "{application}/wes_modules/window/index.js"
  },
  "{3BC82EEF-9B29-4025-9F85-B620639A205B}": {
    "source": "{\n  \"name\": \"window\",\n  \"version\": \"0.0.5\",\n  \"description\": \"control window with wsh\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"bundle\": \"wes bundle ./src/window.cs ./usage.js\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/wachaon/window.git\"\n  },\n  \"keywords\": [\n    \"wsh\",\n    \"window\"\n  ],\n  \"author\": \"wachaon\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/wachaon/window/issues\"\n  },\n  \"homepage\": \"https://github.com/wachaon/window#readme\",\n  \"wes\": {\n    \"dependencies\": {\n      \"csharpscript\": \"0.0.4\"\n    }\n  }\n}",
    "path": "{application}/wes_modules/window/package.json"
  },
  "{ECB6D04F-0102-4A98-9EAC-AD7D777D347E}": {
    "source": "const WShell = require('WScript.Shell')\r\n\r\nconst { readFileSync, writeFileSync, existsFileSync, deleteFileSync } = require('filesystem')\r\nconst { resolve, toWin32Sep, basename, extname } = require('pathname')\r\nconst { forEach, execCommand } = require('utility')\r\nconst { SPACE, LF, rLINE_SEP } = require('text')\r\nconst { isNumber } = require('typecheck')\r\nconst { unnamed } = require('argv')\r\nconst genGUID = require('genGUID')\r\nconst isCLI = require('isCLI')\r\n\r\nif (isCLI(__filename)) {\r\n    const args = unnamed.slice(1)\r\n    console.log(execCommand(`${getCompiler()} ${args.join(SPACE)}`))\r\n} else module.exports = {\r\n    execScript,\r\n    execSource,\r\n    compile,\r\n}\r\n\r\n// methods\r\nfunction execScript(input, Class, Method, ...params) {\r\n    const source = readFileSync(resolve(process.cwd(), input), 'auto')\r\n    return execSource(source, Class, Method, ...params)\r\n}\r\n\r\nfunction execSource(source, Class, Method, ...params) {\r\n    let args = \"\"\r\n    if (params.length) args = new Array(params.length).fill(\"\").map((arg, i) => `$args[${i}]`).join(', ')\r\n    const code = `\r\n$Source = @\"\r\n${source}\r\n\"@\r\nAdd-Type -Language CSharp -TypeDefinition $Source\r\n[${Class}]::${Method}(${args})\r\n`.split(rLINE_SEP).join(LF)\r\n    const temp = resolve(process.cwd(), genGUID() + '.ps1')\r\n\r\n    try {\r\n        console.weaklog(writeFileSync(temp, code, 'UTF-8'))\r\n        const command = `powershell -ExecutionPolicy Bypass -File \"${toWin32Sep(temp)}\" ${params.map(param => convert(param)).join(SPACE)}`\r\n        return execCommand(command)\r\n    } catch (e) {\r\n        throw e\r\n    } finally {\r\n        console.weaklog(deleteFileSync(temp))\r\n    }\r\n}\r\n\r\nfunction compile(input, options = {}) {\r\n    options.out = toWin32Sep(\r\n        resolve(\r\n            process.cwd(),\r\n            (\r\n                'out' in options\r\n                    ? options.out\r\n                    : basename(input, extname(input)) + \".exe\"\r\n            )\r\n        )\r\n    )\r\n    const opts = Object.assign({\r\n        target: \"exe\"\r\n    }, options)\r\n\r\n    let params = []\r\n    forEach((value, key) => {\r\n        params.push(`/${key}:${value}`)\r\n    })(opts)\r\n\r\n    const command = `${getCompiler()} ${params.join(\" \")} ${toWin32Sep(resolve(process.cwd(), input))}`\r\n    const result = execCommand(command)\r\n\r\n    if (isCLI(__filename)) console.log(result)\r\n    else return result\r\n}\r\n\r\n// util\r\nfunction getCompiler() {\r\n    return [\r\n        \"v4.0.30319\",\r\n        \"V3.5\",\r\n        \"V3.0\",\r\n        \"v2.0.50727\",\r\n        \"v1.1.4322\",\r\n        \"v1.0.3705\"\r\n    ]\r\n        .map((ver) => {\r\n            return toWin32Sep(\r\n                resolve(\r\n                    WShell.ExpandEnvironmentStrings(\"%SystemRoot%\"),\r\n                    \"Microsoft.NET/Framework\",\r\n                    ver,\r\n                    \"csc.exe\"\r\n                )\r\n            )\r\n        })\r\n        .find(exe => existsFileSync(exe))\r\n}\r\n\r\nfunction convert(item) {\r\n    if (item === true) return \"$True\"\r\n    if (item === false) return \"$False\"\r\n    if (item == null) return \"$Null\"\r\n    if (isNumber(item)) {\r\n        if (item !== item) \"[double]::NaN\"\r\n        if (item === Number.POSITIVE_INFINITY) return \"[double]::PositiveInfinity\"\r\n        if (item === Number.NEGATIVE_INFINITY) return \"[double]::NegativeInfinity\"\r\n        return item\r\n    }\r\n    return `\"${item}\"`\r\n}",
    "mapping": {},
    "path": "{application}/wes_modules/window/wes_modules/csharpscript/index.js"
  },
  "{7E0D9F14-3336-4B03-BB28-1D923D3390C0}": {
    "source": "{\n  \"name\": \"csharpscript\",\n  \"version\": \"0.0.4\",\n  \"description\": \"csharp script\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"bundle\": \"wes bundle usage/example.cs usage/index.js\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/wachaon/csharpscript.git\"\n  },\n  \"keywords\": [\n    \"csharp\"\n  ],\n  \"author\": \"wachaon\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/wachaon/csharpscript/issues\"\n  },\n  \"homepage\": \"https://github.com/wachaon/csharpscript#readme\"\n}",
    "path": "{application}/wes_modules/window/wes_modules/csharpscript/package.json"
  },
  "{3DD019E3-D66F-4A86-ACD7-225B115838CC}": {
    "source": "const { existsFileSync } = require('filesystem')\r\nconst { resolve } = require('pathname')\r\nconst { execCommand } = require('utility')\r\nconst argv = require('argv')\r\nconst isCLI = require('isCLI')\r\nconst { execScript, compile } = require('csharpscript')\r\n\r\n// mouse\r\nconst mouse_cs = resolve(__dirname, 'src/mouse.cs')\r\nconst mouse_exe = resolve(__dirname, 'mouse.exe')\r\nconst exists_mouse_exe = existsFileSync(mouse_exe)\r\nconst mouse = 'mouse'\r\nconst Main = 'Main'\r\n\r\n// mouse method\r\nfunction pos(x = 0, y = 0) {\r\n    if (exists_mouse_exe) execCommand(`${mouse_exe} pos ${x} ${y}`)\r\n    else execScript(mouse_cs, mouse, Main, 'pos', x, y)\r\n}\r\n\r\nfunction click() {\r\n    if (exists_mouse_exe) execCommand(`${mouse_exe} click`)\r\n    else execScript(mouse_cs, mouse, Main, 'click', 0, 0)\r\n}\r\n\r\nfunction leftDown() {\r\n    if (exists_mouse_exe) execCommand(`${mouse_exe} leftDown`)\r\n    else execScript(mouse_cs, mouse, Main, 'leftDown', 0, 0)\r\n}\r\n\r\nfunction leftUp() {\r\n    if (exists_mouse_exe) execCommand(`${mouse_exe} leftUp`)\r\n    else execScript(mouse_cs, mouse, Main, 'leftUp', 0, 0)\r\n}\r\n\r\nfunction rightClick() {\r\n    if (exists_mouse_exe) execCommand(`${mouse_exe} rightClick`)\r\n    else execScript(mouse_cs, mouse, Main, 'rightClick', 0, 0)\r\n}\r\n\r\nfunction rightDown() {\r\n    if (exists_mouse_exe) execCommand(`${mouse_exe} rightDown`)\r\n    else execScript(mouse_cs, mouse, Main, 'rightDown', 0, 0)\r\n}\r\n\r\nfunction rightUp() {\r\n    if (exists_mouse_exe) execCommand(`${mouse_exe} rightUp`)\r\n    elseexecScript(mouse_cs, mouse, Main, 'rightUp', 0, 0)\r\n}\r\n\r\nfunction scroll(movement = 0) {\r\n    if (exists_mouse_exe) execCommand(`${mouse_exe} scroll ${movement}`)\r\n    else execScript(mouse_cs, mouse, Main, 'scroll', movement, 0)\r\n}\r\n\r\n\r\nif (isCLI(__filename)) {\r\n    if (argv.get('c') || argv.get('compile') || argv.unnamed[1] === 'compile') compile(mouse_cs, { out: mouse_exe })\r\n} else module.exports = {\r\n    pos,\r\n    click,\r\n    leftDown,\r\n    leftUp,\r\n    rightClick,\r\n    rightDown,\r\n    rightUp,\r\n    scroll\r\n}",
    "mapping": {},
    "path": "{application}/wes_modules/mouse/index.js"
  },
  "{B4E03EEE-47B7-4738-9971-718782B1ED7C}": {
    "source": "{\n  \"name\": \"mouse\",\n  \"version\": \"0.0.6\",\n  \"description\": \"mouse operation\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"bundle\": \"wes bundle ./src/mouse.cs ./usage.js\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/wachaon/mouse.git\"\n  },\n  \"keywords\": [\n    \"wes\",\n    \"mouse\"\n  ],\n  \"author\": \"wachaon@gmail.com\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/wachaon/mouse/issues\"\n  },\n  \"homepage\": \"https://github.com/wachaon/mouse#readme\",\n  \"wes\": {\n    \"dependencies\": {\n      \"csharpscript\": \"0.0.4\"\n    }\n  }\n}",
    "path": "{application}/wes_modules/mouse/package.json"
  },
  "{F7F0009C-AF49-45FE-8D7E-1F1EC5554349}": {
    "source": "const WShell = require('WScript.Shell')\r\nconst { existsFileSync } = require('filesystem')\r\nconst { resolve } = require('pathname')\r\nconst { isString, isNumber } = require('typecheck')\r\nconst { unnamed, get } = require('argv')\r\nconst isCLI = require('isCLI')\r\nconst { execCommand } = require('utility')\r\nconst { execScript, compile } = require('csharpscript')\r\n\r\n// keyboard\r\nconst keyboard_cs = resolve(__dirname, 'src/keyboard.cs')\r\nconst keyboard_exe = resolve(__dirname, 'keyboard.exe')\r\nconst exists_keyboard_exe = existsFileSync(keyboard_exe)\r\nconst Keyboard = 'keyboard'\r\nconst Main = 'Main'\r\n\r\n// keyboard method\r\nfunction send(keyCode) {\r\n    if (isString(keyCode)) WShell.SendKeys(keyCode)\r\n    if (isNumber(keyCode)) {\r\n        if (exists_keyboard_exe) execCommand(`${keyboard_exe} send ${keyCode}`)\r\n        else execScript(keyboard_cs, Keyboard, Main, 'send', keyCode)\r\n    }\r\n}\r\n\r\nfunction press(keyCode) {\r\n    if (exists_keyboard_exe) execCommand(`${keyboard_exe} press ${keyCode}`)\r\n    else execScript(keyboard_cs, Keyboard, Main, 'press', keyCode)\r\n}\r\n\r\nfunction release(keyCode) {\r\n    if (exists_keyboard_exe) execCommand(`${keyboard_exe} release ${keyCode}`)\r\n    else execScript(keyboard_cs, Keyboard, Main, 'release', keyCode)\r\n}\r\n\r\n// cli\r\nif (isCLI(__filename)) {\r\n    if (get('c') || get('compile') || unnamed[1] === 'compile') compile(keyboard_cs, { out: keyboard_exe })\r\n} else module.exports = {\r\n    send,\r\n    press,\r\n    release,\r\n    VK_LBUTTON: 0x01, // left mouse button\r\n    VK_RBUTTON: 0x02, // right mouse button\r\n    VK_CANCEL: 0x03, // Ctrl+Break processing\r\n    VK_MBUTTON: 0x04, // Middle button on 3-button mouse\r\n    VK_XBUTTON1: 0x05, // mouse X1 button\r\n    VK_XBUTTON2: 0x06, // mouse X2 button\r\n    VK_BACK: 0x08, // Backspace key\r\n    VK_TAB: 0x09, // Tab key\r\n    VK_CLEAR: 0x0C, // clear key\r\n    VK_RETURN: 0x0D, // Enter key\r\n    VK_SHIFT: 0x10, // shift key\r\n    VK_CONTROL: 0x11, // Ctrl key\r\n    VK_MENU: 0x12, // Alt key\r\n    VK_PAUSE: 0x13, // Pause key\r\n    VK_CAPITAL: 0x14, // Caps Lock key\r\n    VK_KANA: 0x15, // IME kana mode\r\n    VK_HANGEUL: 0x15, // IME Hanguel mode (maintained for compatibility; use VK_HANGUL)\r\n    VK_HANGUL: 0x15, // IME hangul mode\r\n    VK_JUNJA: 0x17, // IME Junja mode\r\n    VK_FINAL: 0x18, // IME final mode\r\n    VK_HANJA: 0x19, // IME Hanja mode\r\n    VK_KANJI: 0x19, // IME kanji mode\r\n    VK_ESCAPE: 0x1B, // Esc key\r\n    VK_CONVERT: 0x1C, // IME conversion\r\n    VK_NONCONVERT: 0x1D, // No IME conversion\r\n    VK_ACCEPT: 0x1E, // IME accept\r\n    VK_MODECHANGE: 0x1F, // IME mode change request\r\n    VK_SPACE: 0x20, // space key\r\n    VK_PRIOR: 0x21, // Page Up key\r\n    VK_NEXT: 0x22, // Page Down key\r\n    VK_END: 0x23, // End key\r\n    VK_HOME: 0x24, // home key\r\n    VK_LEFT: 0x25, // cursor key left\r\n    VK_UP: 0x26, // cursor key up\r\n    VK_RIGHT: 0x27, // cursor key right\r\n    VK_DOWN: 0x28, // cursor key down\r\n    VK_SELECT: 0x29, // Select key\r\n    VK_PRINT: 0x2A, // Print key\r\n    VK_EXECUTE: 0x2B, // Execute key\r\n    VK_SNAPSHOT: 0x2C, // Print Screen key\r\n    VK_INSERT: 0x2D, // Insert key\r\n    VK_DELETE: 0x2E, // Delete key\r\n    VK_HELP: 0x2F, // Help key\r\n    VK_0: 0x30, // 0 key\r\n    VK_1: 0x31, // 1 key\r\n    VK_2: 0x32, // 2 keys\r\n    VK_3: 0x33, // 3 key\r\n    VK_4: 0x34, // 4 key\r\n    VK_5: 0x35, // 5 key\r\n    VK_6: 0x36, // 6 key\r\n    VK_7: 0x37, // 7 key\r\n    VK_8: 0x38, // 8 key\r\n    VK_9: 0x39, // 9 key\r\n    VK_A: 0x41, // A key\r\n    VK_B: 0x42, // B key\r\n    VK_C: 0x43, // C key\r\n    VK_D: 0x44, // D key\r\n    VK_E: 0x45, // E key\r\n    VK_F: 0x46, // F key\r\n    VK_G: 0x47, // G key\r\n    VK_H: 0x48, // H key\r\n    VK_I: 0x49, // I key\r\n    VK_J: 0x4A, // J key\r\n    VK_K: 0x4B, // K key\r\n    VK_L: 0x4C, // L key\r\n    VK_M: 0x4D, // M key\r\n    VK_N: 0x4E, // N key\r\n    VK_O: 0x4F, // O key\r\n    VK_P: 0x50, // P key\r\n    VK_Q: 0x51, // Q key\r\n    VK_R: 0x52, // R key\r\n    VK_S: 0x53, // S key\r\n    VK_T: 0x54, // T key\r\n    VK_U: 0x55, // U key\r\n    VK_V: 0x56, // V key\r\n    VK_W: 0x57, // W key\r\n    VK_X: 0x58, // X key\r\n    VK_Y: 0x59, // Y key\r\n    VK_Z: 0x5A, // Z key\r\n    VK_LWIN: 0x5B, // Left Windows key\r\n    VK_RWIN: 0x5C, // Right Windows key\r\n    VK_APPS: 0x5D, // application key\r\n    VK_SLEEP: 0x5F, // sleep key\r\n    VK_NUMPAD0: 0x60, // numeric keypad 0\r\n    VK_NUMPAD1: 0x61, // numeric keypad 1\r\n    VK_NUMPAD2: 0x62, // numeric keypad 2\r\n    VK_NUMPAD3: 0x63, // numeric keypad 3\r\n    VK_NUMPAD4: 0x64, // numeric keypad 4\r\n    VK_NUMPAD5: 0x65, // numeric keypad 5\r\n    VK_NUMPAD6: 0x66, // numeric keypad 6\r\n    VK_NUMPAD7: 0x67, // numeric keypad 7\r\n    VK_NUMPAD8: 0x68, // numeric keypad 8\r\n    VK_NUMPAD9: 0x69, // numeric keypad 9\r\n    VK_MULTIPLY: 0x6A, // * key\r\n    VK_ADD: 0x6B, // + key\r\n    VK_SEPARATOR: 0x6C, // Separator key\r\n    VK_SUBTRACT: 0x6D, // -key\r\n    VK_DECIMAL: 0x6E, // . key\r\n    VK_DIVIDE: 0x6F, // / key\r\n    VK_F1: 0x70, // F1 key\r\n    VK_F2: 0x71, // F2 key\r\n    VK_F3: 0x72, // F3 key\r\n    VK_F4: 0x73, // F4 key\r\n    VK_F5: 0x74, // F5 key\r\n    VK_F6: 0x75, // F6 key\r\n    VK_F7: 0x76, // F7 key\r\n    VK_F8: 0x77, // F8 key\r\n    VK_F9: 0x78, // F9 key\r\n    VK_F10: 0x79, // F10 key\r\n    VK_F11: 0x7A, // F11 key\r\n    VK_F12: 0x7B, // F12 key\r\n    VK_F13: 0x7C, // F13 key\r\n    VK_F14: 0x7D, // F14 key\r\n    VK_F15: 0x7E, // F15 key\r\n    VK_F16: 0x7F, // F16 key\r\n    VK_F17: 0x80, // F17 key\r\n    VK_F18: 0x81, // F18 key\r\n    VK_F19: 0x82, // F19 key\r\n    VK_F20: 0x83, // F20 key\r\n    VK_F21: 0x84, // F21 key\r\n    VK_F22: 0x85, // F22 key\r\n    VK_F23: 0x86, // F23 key\r\n    VK_F24: 0x87, // F24 key\r\n    VK_NUMLOCK: 0x90, // NumLock key\r\n    VK_SCROLL: 0x91, // ScrollLock key\r\n    VK_LSHIFT: 0xA0, // left shift key\r\n    VK_RSHIFT: 0xA1, // right shift key\r\n    VK_LCONTROL: 0xA2, // Left Ctrl key\r\n    VK_RCONTROL: 0xA3, // Right Ctrl key\r\n    VK_LMENU: 0xA4, // Left Alt key\r\n    VK_RMENU: 0xA5, // Right Alt key\r\n    VK_BROWSER_BACK: 0xA6, // browser back key\r\n    VK_BROWSER_FORWARD: 0xA7, // browser forward key\r\n    VK_BROWSER_REFRESH: 0xA8, // browser refresh key\r\n    VK_BROWSER_STOP: 0xA9, // browser stop key\r\n    VK_BROWSER_SEARCH: 0xAA, // browser search key\r\n    VK_BROWSER_FAVORITES: 0xAB, // browser favorite keys\r\n    VK_BROWSER_HOME: 0xAC, // Browser Home key\r\n    VK_VOLUME_MUTE: 0xAD, // volume mute key\r\n    VK_VOLUME_DOWN: 0xAE, // volume down key\r\n    VK_VOLUME_UP: 0xAF, // volume up key\r\n    VK_MEDIA_NEXT_TRACK: 0xB0, // media next track key\r\n    VK_MEDIA_PREV_TRACK: 0xB1, // media pre-track key\r\n    VK_MEDIA_STOP: 0xB2, // media stop key\r\n    VK_MEDIA_PLAY_PAUSE: 0xB3, // media play/pause key\r\n    VK_LAUNCH_MAIL: 0xB4, // Mail launch key\r\n    VK_LAUNCH_MEDIA_SELECT: 0xB5, // media selection key\r\n    VK_LAUNCH_APP1: 0xB6, // launch key 1\r\n    VK_LAUNCH_APP2: 0xB7, // launch key 2\r\n    VK_ICO_HELP: 0xE3, // ?\r\n    VK_ICO_00: 0xE4, // ?\r\n    VK_PROCESSKEY: 0xE5, // IME PROCESS key\r\n    VK_ICO_CLEAR: 0xE6, // ?\r\n    VK_PACKET: 0xE7, // See MSDN for details\r\n    VK_OEM_RESET: 0xE9, // OEM defined key\r\n    VK_OEM_JUMP: 0xEA, // OEM defined key\r\n    VK_OEM_PA1: 0xEB, // OEM defined key\r\n    VK_OEM_PA2: 0xEC, // OEM defined key\r\n    VK_OEM_PA3: 0xED, // OEM defined key\r\n    VK_OEM_WSCTRL: 0xEE, // OEM defined key\r\n    VK_OEM_CUSEL: 0xEF, // OEM defined key\r\n    VK_OEM_ATTN: 0xF0, // OEM defined key\r\n    VK_OEM_FINISH: 0xF1, // OEM defined key\r\n    VK_OEM_COPY: 0xF2, // OEM defined key\r\n    VK_OEM_AUTO: 0xF3, // OEM defined key\r\n    VK_OEM_ENLW: 0xF4, // OEM defined key\r\n    VK_OEM_BACKTAB: 0xF5, // OEM defined key\r\n    VK_ATTN: 0xF6, // Attn key\r\n    VK_CRSEL: 0xF7, // CrSel key\r\n    VK_EXSEL: 0xF8, // Exsel key\r\n    VK_EREOF: 0xF9, // Erase EOF key\r\n    VK_PLAY: 0xFA, // Play key\r\n    VK_ZOOM: 0xFB, // Zoom key\r\n    VK_NONAME: 0xFC, // Reserved\r\n    VK_PA1: 0xFD, // PA1 key\r\n    VK_OEM_CLEAR: 0xFE // clear key\r\n}",
    "mapping": {},
    "path": "{application}/wes_modules/keyboard/index.js"
  },
  "{A259C363-3CDC-4F92-ADC9-2D5B0B046739}": {
    "source": "{\n  \"name\": \"keyboard\",\n  \"version\": \"0.0.6\",\n  \"description\": \"wsh keyboard\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"bundle\": \"wes bundle ./src/keyboard.cs\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/wachaon/keyboard.git\"\n  },\n  \"keywords\": [\n    \"wsh\",\n    \"keyboard\"\n  ],\n  \"author\": \"wachaon\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/wachaon/keyboard/issues\"\n  },\n  \"homepage\": \"https://github.com/wachaon/keyboard#readme\",\n  \"wes\": {\n    \"dependencies\": {\n      \"csharpscript\": \"0.0.4\"\n    }\n  }\n}",
    "path": "{application}/wes_modules/keyboard/package.json"
  },
  "{07E75FA2-118D-4525-89BA-49EFC27DB015}": {
    "source": "using System;\r\nusing System.Text;\r\nusing System.Windows.Forms;\r\n\r\ninternal class clipboard {\r\n    [STAThread]\r\n    public static void Main(params string[] args) {\r\n        string method = args[0];\r\n        string format = args[1];\r\n        if (method == \"setData\") {\r\n            if (format == \"Text\") {\r\n                string data = args[2];\r\n                Clipboard.SetDataObject(data, true);\r\n            }\r\n        }\r\n        if (method == \"getData\") {\r\n            if (format == \"Text\") {\r\n                IDataObject data = Clipboard.GetDataObject();\r\n                if(data.GetDataPresent(DataFormats.Text)) {\r\n                    Console.WriteLine(data.GetData(DataFormats.Text));\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n",
    "mapping": {},
    "path": "{application}/wes_modules/clipboard/src/clipboard.cs"
  },
  "{831E7834-E18B-4A61-8CDB-6F4B2BC098A2}": {
    "source": "\r\nusing System;\r\nusing System.Windows;\r\nusing System.Runtime.InteropServices;\r\n\r\npublic class window {\r\n    public static int Main (params string[] args) {\r\n        string method = args[0];\r\n        IntPtr hWnd = GetForegroundWindow();\r\n\r\n        int SW_SHOWNORMAL = 1;\r\n        int SW_SHOWMINIMIZED = 2;\r\n        int SW_MAXIMIZE = 3;\r\n\r\n        if (method == \"move\") {\r\n            int left = Int32.Parse(args[1]);\r\n            int top = Int32.Parse(args[2]);\r\n            int width = Int32.Parse(args[3]);\r\n            int height = Int32.Parse(args[4]);\r\n            int right = width - left;\r\n            int bottom = height - top;\r\n            bool repaint = true;\r\n            MoveWindow(hWnd, left, top, width, height, repaint);\r\n        }\r\n        if (method == \"get\") {\r\n            RECT rect;\r\n            bool flag = GetWindowRect(hWnd, out rect);\r\n\r\n            if (args.Length == 1) {\r\n                Console.WriteLine(\r\n                    \"hWnd: {0} left: {1} top: {2} width: {3} height: {4}\",\r\n                    hWnd,\r\n                    rect.left,\r\n                    rect.top,\r\n                    rect.right - rect.left,\r\n                    rect.bottom - rect.top\r\n                );\r\n            } else {\r\n                return 0;\r\n            }\r\n        }\r\n        if (method == \"hwnd\") {\r\n            if (args.Length == 1) {\r\n                Console.WriteLine(hWnd);\r\n            } else {\r\n                return Int32.Parse(hWnd.ToString());\r\n            }\r\n        }\r\n        if (method == \"windowLeft\") {\r\n            RECT rect;\r\n            bool flag = GetWindowRect(hWnd, out rect);\r\n\r\n            if (args.Length == 1) {\r\n                Console.WriteLine(\"left: {0}\", rect.left);\r\n            } else {\r\n                return Int32.Parse(rect.left.ToString());\r\n            }\r\n        }\r\n        if (method == \"windowTop\") {\r\n            RECT rect;\r\n            bool flag = GetWindowRect(hWnd, out rect);\r\n\r\n            if (args.Length == 1) {\r\n                Console.WriteLine(\"top: {0}\", rect.top);\r\n            } else {\r\n                return Int32.Parse(rect.top.ToString());\r\n            }\r\n        }\r\n        if (method == \"windowWidth\") {\r\n            RECT rect;\r\n            bool flag = GetWindowRect(hWnd, out rect);\r\n\r\n            if (args.Length == 1) {\r\n                Console.WriteLine(\"whidth: {0}\", rect.right - rect.left);\r\n            } else {\r\n                return Int32.Parse((rect.right - rect.left).ToString());\r\n            }\r\n        }\r\n        if (method == \"windowHeight\") {\r\n            RECT rect;\r\n            bool flag = GetWindowRect(hWnd, out rect);\r\n\r\n            if (args.Length == 1) {\r\n                Console.WriteLine(\"height: {0}\",rect.bottom - rect.top);\r\n            } else {\r\n                return Int32.Parse((rect.bottom - rect.top).ToString());\r\n            }\r\n        }\r\n\r\n        if (method == \"normal\") {\r\n            ShowWindowAsync(hWnd, SW_SHOWNORMAL);\r\n        }\r\n        if (method == \"min\") {\r\n            ShowWindowAsync(hWnd, SW_SHOWMINIMIZED);\r\n        }\r\n        if (method == \"max\") {\r\n            ShowWindowAsync(hWnd, SW_MAXIMIZE);\r\n        }\r\n\r\n        if (method == \"activateTitle\") {\r\n            //string title = args[1];\r\n            //Console.WriteLine(\"title: {0}\", title);\r\n            //IntPtr hwnd = FindWindow(null, title);\r\n            IntPtr hwnd = FindWindow(null, args[1]);\r\n            if (hwnd != IntPtr.Zero) {\r\n                SetForegroundWindow(hwnd);\r\n                ShowWindowAsync(hwnd, SW_SHOWNORMAL);\r\n                SetActiveWindow(hwnd);\r\n            }\r\n        }\r\n\r\n        if (method == \"activateHandle\") {\r\n            IntPtr hwnd = new IntPtr(Int32.Parse(args[1]));\r\n            if (hwnd != IntPtr.Zero) {\r\n                SetForegroundWindow(hwnd);\r\n                ShowWindowAsync(hwnd, SW_SHOWNORMAL);\r\n                SetActiveWindow(hwnd);\r\n            }\r\n        }\r\n\r\n        if (method === \"title\") {\r\n            IntPtr hwnd = GetForegroundWindow();\r\n            const int nChars = 256;\r\n            System.Text.StringBuilder Buff = new System.Text.StringBuilder(nChars);\r\n            if (GetWindowText(hWnd, Buff, nChars) > 0) {\r\n                Console.WriteLine(Buff.ToString());\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    [DllImport(\"user32.dll\")]\r\n    public static extern IntPtr GetForegroundWindow();\r\n\r\n    [DllImport(\"user32.dll\")]\r\n    private static extern int MoveWindow(IntPtr hwnd, int x, int y, int nWidth,int nHeight, bool bRepaint);\r\n\r\n    [DllImport(\"user32.dll\")]\r\n    private static extern bool GetWindowRect(IntPtr hwnd, out RECT lpRect);\r\n\r\n    [DllImport(\"user32.dll\")]\r\n    private static extern bool ShowWindowAsync(IntPtr hwnd, int nCmdShow);\r\n\r\n    [DllImport(\"user32.dll\")]\r\n    private static extern IntPtr SetActiveWindow(IntPtr hwnd);\r\n\r\n    [DllImport(\"user32.dll\")]\r\n    static extern bool SetForegroundWindow(IntPtr hWnd);\r\n\r\n    [DllImport(\"user32.dll\")]\r\n    static extern IntPtr FindWindow(string lpClassName, string lpWindowName);\r\n\r\n    [DllImport(\"user32.dll\")]\r\n    static extern int GetWindowText(IntPtr hWnd, System.Text.StringBuilder lpWindowText, int nMaxCount);\r\n\r\n    [StructLayout(LayoutKind.Sequential)]\r\n    private struct RECT {\r\n        public int left;\r\n        public int top;\r\n        public int right;\r\n        public int bottom;\r\n    }\r\n}\r\n",
    "mapping": {},
    "path": "{application}/wes_modules/window/src/window.cs"
  },
  "{DAC22001-4824-4BC3-B964-7665BA643BD4}": {
    "source": "using System;\r\nusing System.Runtime.InteropServices;\r\n\r\npublic class keyboard {\r\n    public static void Main (params string[] args) {\r\n        string method = args[0];\r\n        int key_code = Int32.Parse(args[1]);\r\n        byte input = (byte)key_code;\r\n\r\n        uint KEYEVENTF_EXTENDEDKEY = 0x1;\r\n        uint KEYEVENTF_KEYUP = 0x2;\r\n\r\n        if (method == \"send\" || method == \"press\") { keybd_event(input, 0, KEYEVENTF_EXTENDEDKEY, 0); }\r\n        if (method == \"send\" || method == \"release\") { keybd_event(input, 0, KEYEVENTF_EXTENDEDKEY | KEYEVENTF_KEYUP, 0); }\r\n    }\r\n\r\n    [DllImport(\"user32.dll\")]\r\n    private static extern void keybd_event(byte bVk, byte bScan, uint dwFlags, uint dwExtraInfo);\r\n}\r\n",
    "mapping": {},
    "path": "{application}/wes_modules/keyboard/src/keyboard.cs"
  },
  "{5A75AD43-656D-439D-9CA3-3DB4DEACE680}": {
    "source": "using System;\r\nusing System.Runtime.InteropServices;\r\n\r\npublic class mouse {\r\n    public static void Main (params string[] args) {\r\n        string method = args[0];\r\n        int posX = args.Length > 1 ? Int32.Parse(args[1]) : 0;\r\n        int posY = args.Length > 2 ? Int32.Parse(args[2]) : 0;\r\n\r\n        int MOUSEEVENTF_LEFTDOWN = 0x0002;\r\n        int MOUSEEVENTF_LEFTUP = 0x0004;\r\n        int MOUSEEVENTF_RIGHTDOWN = 0x0008;\r\n        int MOUSEEVENTF_RIGHTUP = 0x0010;\r\n        int MOUSEEVENTF_MIDDLEDOWN = 0x0020;\r\n        int MOUSEEVENTF_MIDDLEUP = 0x0040;\r\n        int MOUSEEVENTF_WHEEL = 0x0800;\r\n\r\n        if (method == \"pos\") { SetCursorPos(posX, posY); }\r\n\r\n        if (method == \"click\" || method == \"leftDown\") { mouse_event(MOUSEEVENTF_LEFTDOWN, 0, 0, 0, 0); }\r\n        if (method == \"click\" || method == \"leftUp\"  ) { mouse_event(MOUSEEVENTF_LEFTUP, 0, 0, 0, 0); }\r\n\r\n        if (method == \"rightClick\" || method == \"rightDown\") { mouse_event(MOUSEEVENTF_RIGHTDOWN, 0, 0, 0, 0); }\r\n        if (method == \"rightClick\" || method == \"rightUp\"  ) { mouse_event(MOUSEEVENTF_RIGHTUP, 0, 0, 0, 0); }\r\n\r\n        if (method == \"middleClick\" || method == \"middleDown\") { mouse_event(MOUSEEVENTF_MIDDLEDOWN, 0, 0, 0, 0); }\r\n        if (method == \"middleClick\" || method == \"middleUp\"  ) { mouse_event(MOUSEEVENTF_MIDDLEUP, 0, 0, 0, 0); }\r\n\r\n        if (method == \"scroll\") { mouse_event(MOUSEEVENTF_WHEEL,0,0,posX,0); }\r\n    }\r\n\r\n    [DllImport(\"user32.dll\")]\r\n    public static extern void SetCursorPos(int X, int Y);\r\n\r\n    [DllImport(\"user32.dll\")]\r\n    public static extern void mouse_event(int dwFlags, int dx, int dy, int cButtons, int dwExtraInfo);\r\n}\r\n",
    "mapping": {},
    "path": "{application}/wes_modules/mouse/src/mouse.cs"
  },
  "{EF459EF3-E885-4F52-8748-2ACECCD02F68}": {
    "source": "MIT License\n\nCopyright (c) 2023 wachaon\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
    "mapping": {},
    "path": "{application}/LICENSE"
  },
  "{F60E8678-32D5-4DC7-A21C-6D43EC3BE043}": {
    "source": "# application\noperation of windows\n",
    "mapping": {},
    "path": "{application}/README.md"
  }
}